#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <conio.h>

// Struktur data untuk menyimpan informasi user
typedef struct {
    char username[50];
    char password[50];
} User;

// Struktur data untuk menyimpan informasi admin
typedef struct {
    char username[50];
    char password[50];
} Admin;

// Struktur data untuk menyimpan informasi barang
typedef struct {
    char nama[50];
    float harga;
    int stok;
} Barang;

// Struktur data untuk menyimpan informasi transaksi
typedef struct {
    char username[50];
    char barang[50];
    int jumlahBarang;
    float hargaTotal;
} Transaksi;

// Struktur data untuk menyimpan informasi mata uang
typedef struct {
    char kode[4];
    float kurs;
} MataUang;

// Deklarasi fungsi
void daftarUser();
int loginAdmin();
int loginUser();
void lihatDaftarPengguna();
void tampilkanLaporan(Transaksi *transaksi, int jumlahTransaksi);
void laporanImpor();
void laporanEkspor();
void updateBarang();
void pengaturanMataUang();
void pengaturanSistem();
void menuAdmin();
void tampilkanBarang(Barang *barang, int jumlahBarang);
void perhitunganBiaya(Barang *barang, int jumlahBarang);
void pilihBarang(Barang *barang, int jumlahBarang);
void subMenuImpor();
void tampilkanBarangEkspor(Barang *barang, int jumlahBarang);
void tambahBarangEkspor(Barang *barang, int *jumlahBarang);
void subMenuEkspor() ;
void menuUser();

// Fungsi utama (main)
int main() {
    int pilihan;

    do {
        // Menampilkan menu utama
        printf("\n=== Sistem Ekspor-Impor ===\n");
        printf("1. Login sebagai Admin\n");
        printf("2. Login sebagai User\n");
        printf("3. Daftar User\n");
        printf("4. Keluar\n");
        printf("Pilih menu (1-4): ");
        scanf("%d", &pilihan);

        // Menggunakan switch case untuk memilih menu
        switch (pilihan) {
            case 1:
                // Login sebagai Admin
                if (loginAdmin()) {
                    // Lanjutkan ke menu Admin jika login berhasil
                    menuAdmin();
                } else {
                    printf("Login sebagai Admin Gagal\n");
                }
                break;
            case 2:
                // Login sebagai User
                if (loginUser()) {
                    // Lanjutkan ke menu User jika login berhasil
                    menuUser();
                } else {
                    printf("Login sebagai User Gagal\n");
                }
                break;
            case 3:
                // Daftar User
                daftarUser();
                break;
            case 4:
                printf("Keluar dari program.\n");
                break;
            default:
                printf("Pilihan tidak valid.\n");
                break;
        }
    } while (pilihan != 4);

    return 0;
}

// Fungsi untuk daftar user
void daftarUser() {
    FILE *file;
    User newUser;

    // Membuka file untuk penulisan (mode "a" untuk append)
    file = fopen("user_data.txt", "a");
    if (file == NULL) {
        printf("Error: Gagal membuka file untuk penulisan.\n");
        exit(1);
    }

    // Meminta pengguna memasukkan informasi pengguna baru
    printf("Masukkan username: ");
    scanf("%s", newUser.username);

    printf("Masukkan password: ");
    scanf("%s", newUser.password);

    // Menyimpan informasi pengguna ke dalam file
    fprintf(file, "%s %s\n", newUser.username, newUser.password);

    // Menutup file
    fclose(file);

    printf("Pengguna baru berhasil didaftarkan.\n");
}

// Fungsi untuk login sebagai Admin
int loginAdmin() {
    char username[20];
    char password[20];

    // Meminta pengguna memasukkan username
    printf("Masukkan username Admin: ");
    scanf("%s", username);

    // Meminta pengguna memasukkan password
    printf("Masukkan password Admin: ");
    scanf("%s", password);

    // Memeriksa kevalidan username dan password
    if (strcmp(username, "admin") == 0 && strcmp(password, "admin123") == 0) {
        printf("Login sebagai Admin berhasil.\n");
        return 1; // Return 1 jika login berhasil
    } else {
        printf("Login sebagai Admin gagal.\n");
        return 0; // Return 0 jika login gagal
    }
}

// Fungsi untuk login sebagai User
int loginUser() {
    FILE *file;
    User userLogin;
    char userUsername[50];
    char userPassword[50];

    // Membuka file yang berisi informasi user
    file = fopen("user_data.txt", "r");
    if (file == NULL) {
        printf("Error: File user_data.txt tidak ditemukan.\n");
        exit(1);
    }

    // Meminta pengguna memasukkan username dan password User
    printf("Masukkan username User: ");
    scanf("%s", userUsername);

    printf("Masukkan password User: ");
    scanf("%s", userPassword);

    // Memeriksa kevalidan username dan password
    int valid = 0; // Flag untuk menandakan kevalidan login
    while (fscanf(file, "%s %s", userLogin.username, userLogin.password) == 2) {
        if (strcmp(userUsername, userLogin.username) == 0 && strcmp(userPassword, userLogin.password) == 0) {
            valid = 1;
            break;
        }
    }

    // Menutup file
    fclose(file);

    // Jika login valid, lanjutkan ke menu User
    if (valid) {
        printf("Login User berhasil.\n");
    } else {
        printf("Login User gagal. Keluar dari program.\n");
        exit(1);
    }
}

// Fungsi untuk menampilkan daftar pengguna (fitur 1)
void lihatDaftarPengguna() {
    FILE *file;
    User user;

    // Membuka file yang berisi informasi pengguna
    file = fopen("user_data.txt", "r");
    if (file == NULL) {
        printf("Error: File user_data.txt tidak ditemukan.\n");
        exit(1);
    }

    // Menampilkan daftar pengguna
    printf("\n=== Daftar Pengguna ===\n");
    printf("Username\tPassword\n");
    while (fscanf(file, "%s %s", user.username, user.password) == 2) {
        printf("%-15s %s\n", user.username, user.password);
    }

    // Menutup file
    fclose(file);
}

// Fungsi untuk menampilkan laporan transaksi (fitur 2)
void tampilkanLaporan(Transaksi *transaksi, int jumlahTransaksi) {
    printf("\n=== Laporan Transaksi ===\n");
    printf("Username\tBarang\t\tJumlah\tHarga Total\n");
    for (int i = 0; i < jumlahTransaksi; i++) {
        printf("%-15s %-15s %-6d %.2f\n", transaksi[i].username, transaksi[i].barang, transaksi[i].jumlahBarang, transaksi[i].hargaTotal);
    }
}

// Fungsi untuk menampilkan laporan impor (fitur 2)
void laporanImpor() {
    FILE *file;
    Transaksi transaksi;
    int jumlahTransaksi = 0; // Jumlah transaksi impor

    // Membuka file yang berisi informasi transaksi impor
    file = fopen("laporan_impor.txt", "r");
    if (file == NULL) {
        printf("Error: File laporan_impor.txt tidak ditemukan.\n");
        return;
    }

    // Membaca informasi transaksi impor
    while (fscanf(file, "%s %s %d %f", transaksi.username, transaksi.barang, &transaksi.jumlahBarang, &transaksi.hargaTotal) == 4) {
        jumlahTransaksi++;
    }

    // Menutup file
    fclose(file);

    // Menampilkan laporan impor
    if (jumlahTransaksi > 0) {
        tampilkanLaporan(&transaksi, jumlahTransaksi);
    } else {
        printf("Tidak ada laporan impor.\n");
    }
}

// Fungsi untuk menampilkan laporan ekspor (fitur 2)
void laporanEkspor() {
    FILE *file;
    Transaksi transaksi;
    int jumlahTransaksi = 0; // Jumlah transaksi ekspor

    // Membuka file yang berisi informasi transaksi ekspor
    file = fopen("laporan_ekspor.txt", "r");
    if (file == NULL) {
        printf("Error: File laporan_ekspor.txt tidak ditemukan.\n");
        return;
    }

    // Membaca informasi transaksi ekspor
    while (fscanf(file, "%s %s %d %f", transaksi.username, transaksi.barang, &transaksi.jumlahBarang, &transaksi.hargaTotal) == 4) {
        jumlahTransaksi++;
    }

    // Menutup file
    fclose(file);

    // Menampilkan laporan ekspor
    if (jumlahTransaksi > 0) {
        tampilkanLaporan(&transaksi, jumlahTransaksi);
    } else {
        printf("Tidak ada laporan ekspor.\n");
    }
}


// Fungsi untuk update barang (sub-menu dari pengaturan sistem)
void updateBarang() {
    FILE *file;
    Barang barang;
    int pilihan;

    // Membuka file yang berisi informasi barang
    file = fopen("data_barang.txt", "a+");
    if (file == NULL) {
        printf("Error: File data_barang.txt tidak dapat diakses.\n");
        return;
    }

    // Menampilkan menu update barang
    do {
        printf("\n=== Update Barang ===\n");
        printf("1. Tambah Barang\n");
        printf("2. Kembali ke Pengaturan Sistem\n");
        printf("Pilih menu (1-2): ");
        scanf("%d", &pilihan);

        switch (pilihan) {
            case 1:
                // Meminta pengguna memasukkan informasi barang baru
                printf("Masukkan nama barang: ");
                scanf("%s", barang.nama);

                printf("Masukkan harga barang: ");
                scanf("%f", &barang.harga);

                printf("Masukkan stok barang: ");
                scanf("%d", &barang.stok);

                // Menyimpan informasi barang ke dalam file
                fprintf(file, "%s %.2f %d\n", barang.nama, barang.harga, barang.stok);

                printf("Barang berhasil ditambahkan.\n");
                break;
            case 2:
                printf("Kembali ke Pengaturan Sistem.\n");
                break;
            default:
                printf("Pilihan tidak valid.\n");
                break;
        }
    } while (pilihan != 2);

    // Menutup file
    fclose(file);
}

// Fungsi untuk pengaturan mata uang (sub-menu dari pengaturan sistem)
void pengaturanMataUang() {
    FILE *file;
    MataUang mataUang;
    int pilihan;

    // Membuka file yang berisi informasi mata uang
    file = fopen("data_mata_uang.txt", "a+");
    if (file == NULL) {
        printf("Error: File data_mata_uang.txt tidak dapat diakses.\n");
        return;
    }

    // Menampilkan menu pengaturan mata uang
    do {
        printf("\n=== Pengaturan Mata Uang ===\n");
        printf("1. Tambah Mata Uang\n");
        printf("2. Kembali ke Pengaturan Sistem\n");
        printf("Pilih menu (1-2): ");
        scanf("%d", &pilihan);

        switch (pilihan) {
            case 1:
                // Meminta pengguna memasukkan informasi mata uang baru
                printf("Masukkan kode mata uang (3 huruf): ");
                scanf("%s", mataUang.kode);

                printf("Masukkan kurs mata uang: ");
                scanf("%f", &mataUang.kurs);

                // Menyimpan informasi mata uang ke dalam file
                fprintf(file, "%s %.2f\n", mataUang.kode, mataUang.kurs);

                printf("Mata uang berhasil ditambahkan.\n");
                break;
            case 2:
                printf("Kembali ke Pengaturan Sistem.\n");
                break;
            default:
                printf("Pilihan tidak valid.\n");
                break;
        }
    } while (pilihan != 2);

    // Menutup file
    fclose(file);
}

// Fungsi untuk mengatur sistem (fitur 3)
void pengaturanSistem() {
    int pilihan;

    do {
        printf("\n=== Menu Pengaturan Sistem ===\n");
        printf("1. Update Barang\n");
        printf("2. Pengaturan Mata Uang\n");
        printf("3. Kembali ke Menu Admin\n");
        printf("Pilih menu (1-3): ");
        scanf("%d", &pilihan);

        switch (pilihan) {
            case 1:
                updateBarang();
                break;
            case 2:
                pengaturanMataUang();
                break;
            case 3:
                printf("Kembali ke Menu Admin.\n");
                break;
            default:
                printf("Pilihan tidak valid.\n");
                break;
        }
    } while (pilihan != 3);
}

// Fungsi untuk menu Admin
void menuAdmin() {
    int pilihan;

    do {
        printf("\n=== Menu Admin ===\n");
        printf("1. Lihat Daftar Pengguna\n");
        printf("2. Laporan Transaksi\n");
        printf("3. Pengaturan Sistem\n");
        printf("4. Keluar\n");
        printf("Pilih menu (1-4): ");
        scanf("%d", &pilihan);

        switch (pilihan) {
            case 1:
                lihatDaftarPengguna();
                break;
            case 2:
                printf("\n=== Laporan Transaksi ===\n");
                printf("1. Laporan Impor\n");
                printf("2. Laporan Ekspor\n");
                printf("Pilih laporan (1-2): ");
                scanf("%d", &pilihan);
                if (pilihan == 1) {
                    laporanImpor();
                } else if (pilihan == 2) {
                    laporanEkspor();
                } else {
                    printf("Pilihan tidak valid.\n");
                }
                break;
            case 3:
                pengaturanSistem();
                break;
            case 4:
                printf("Keluar dari Menu Admin.\n");
                break;
            default:
                printf("Pilihan tidak valid.\n");
                break;
        }
    } while (pilihan != 4);
}

// Fungsi untuk menampilkan barang (fitur sub menu Impor)
void tampilkanBarang(Barang *barang, int jumlahBarang) {
    printf("\n=== Daftar Barang ===\n");
    printf("No   Nama Barang   Harga   Stok\n");
    for (int i = 0; i < jumlahBarang; i++) {
        printf("%-4d %-13s %.2f    %d\n", i + 1, barang[i].nama, barang[i].harga, barang[i].stok);
    }
}

// Fungsi untuk perhitungan biaya dan kurs (sub-menu dari sub-menu Impor)
void perhitunganBiaya(Barang *barang, int jumlahBarang) {
    int nomorBarang;
    float totalBiaya;
    float kurs;

    // Menampilkan daftar barang
    tampilkanBarang(barang, jumlahBarang);

    // Meminta pengguna memilih barang
    printf("Pilih nomor barang: ");
    scanf("%d", &nomorBarang);

    // Melakukan validasi nomor barang
    if (nomorBarang >= 1 && nomorBarang <= jumlahBarang) {
        // Menentukan kurs (contoh: 1 USD = 15000 IDR)
        printf("Masukkan kurs mata uang: ");
        scanf("%f", &kurs);

        // Melakukan perhitungan biaya
        totalBiaya = barang[nomorBarang - 1].harga * kurs;

        // Menampilkan hasil perhitungan biaya
        printf("Biaya untuk barang %s dengan kurs %.2f: %.2f\n", barang[nomorBarang - 1].nama, kurs, totalBiaya);
    } else {
        printf("Nomor barang tidak valid.\n");
    }
}

// Fungsi untuk memilih barang (sub-menu dari sub-menu Impor)
void pilihBarang(Barang *barang, int jumlahBarang) {
    int nomorBarang;

    // Menampilkan daftar barang
    tampilkanBarang(barang, jumlahBarang);

    // Meminta pengguna memilih barang
    printf("Pilih nomor barang: ");
    scanf("%d", &nomorBarang);

    // Melakukan validasi nomor barang
    if (nomorBarang >= 1 && nomorBarang <= jumlahBarang) {
        // Implementasi untuk memilih barang
        printf("Anda memilih barang %s.\n", barang[nomorBarang - 1].nama);
    } else {
        printf("Nomor barang tidak valid.\n");
    }
}

// Fungsi untuk sub menu Impor (fitur 1)
void subMenuImpor() {
    int pilihan;
    int jumlahBarang = 3; // Contoh jumlah barang
    Barang barang[10];    // Array untuk menyimpan informasi barang

    do {
        printf("\n=== Sub Menu Impor ===\n");
        printf("1. Tampilkan Barang\n");
        printf("2. Pilih Barang\n");
        printf("3. Perhitungan Biaya\n");
        printf("4. Simpan dan Keluar\n");
        printf("Pilih menu (1-4): ");
        scanf("%d", &pilihan);

        switch (pilihan) {
            case 1:
                tampilkanBarang(barang, jumlahBarang);
                break;
            case 2:
                pilihBarang(barang, jumlahBarang);
                break;
            case 3:
                perhitunganBiaya(barang, jumlahBarang);
                break;
            case 4:
                printf("Simpan dan keluar dari Sub Menu Impor.\n");
                break;
            default:
                printf("Pilihan tidak valid.\n");
                break;
        }
    } while (pilihan != 4);
}


// Fungsi untuk menampilkan barang (fitur sub menu Ekspor)
void tampilkanBarangEkspor(Barang *barang, int jumlahBarang) {
    printf("\n=== Daftar Barang Ekspor ===\n");
    printf("No   Nama Barang   Harga   Stok\n");
    for (int i = 0; i < jumlahBarang; i++) {
        printf("%-4d %-13s %.2f    %d\n", i + 1, barang[i].nama, barang[i].harga, barang[i].stok);
    }
}

// Fungsi untuk menambah barang (sub-menu dari sub-menu Ekspor)
void tambahBarangEkspor(Barang *barang, int *jumlahBarang) {
    char namaBarang[50];
    float hargaBarang;
    int stokBarang;

    // Meminta pengguna memasukkan informasi barang baru
    printf("Masukkan nama barang: ");
    scanf("%s", namaBarang);

    printf("Masukkan harga barang: ");
    scanf("%f", &hargaBarang);

    printf("Masukkan stok barang: ");
    scanf("%d", &stokBarang);

    // Menambah informasi barang baru ke dalam array
    strcpy(barang[*jumlahBarang].nama, namaBarang);
    barang[*jumlahBarang].harga = hargaBarang;
    barang[*jumlahBarang].stok = stokBarang;

    // Menambah jumlah barang
    (*jumlahBarang)++;

    printf("Barang berhasil ditambahkan.\n");
}

// Fungsi untuk sub menu Ekspor (fitur 2)
void subMenuEkspor() {
    int pilihan;
    int jumlahBarang = 3; // Contoh jumlah barang
    Barang barang[10];    // Array untuk menyimpan informasi barang

    do {
        printf("\n=== Sub Menu Ekspor ===\n");
        printf("1. Tampilkan Barang\n");
        printf("2. Tambah Barang\n");
        printf("3. Simpan dan Keluar\n");
        printf("Pilih menu (1-3): ");
        scanf("%d", &pilihan);

        switch (pilihan) {
            case 1:
                tampilkanBarangEkspor(barang, jumlahBarang);
                break;
            case 2:
                tambahBarangEkspor(barang, &jumlahBarang);
                break;
            case 3:
                printf("Simpan dan keluar dari Sub Menu Ekspor.\n");
                break;
            default:
                printf("Pilihan tidak valid.\n");
                break;
        }
    } while (pilihan != 3);
}

// Fungsi untuk menu User
void menuUser() {
    int pilihan;

    do {
        printf("\n=== Menu User ===\n");
        printf("1. Sub Menu Impor\n");
        printf("2. Sub Menu Ekspor\n");
        printf("3. Keluar\n");
        printf("Pilih menu (1-3): ");
        scanf("%d", &pilihan);

        switch (pilihan) {
            case 1:
                subMenuImpor();
                break;
            case 2:
                subMenuEkspor();
                break;
            case 3:
                printf("Keluar dari Menu User.\n");
                break;
            default:
                printf("Pilihan tidak valid.\n");
                break;
        }
    } while (pilihan != 3);
}
